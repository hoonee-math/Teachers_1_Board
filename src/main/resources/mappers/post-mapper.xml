<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="post">
	<resultMap id="postCommentMap" type="comment1">
		<id column="comment_no" property="commentNo"/>
		<result column="parent_no" property="parentNo"/>
		<result column="comment_contnet" property="comment"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="comment_level" property="level"/>
		<association property="member" javaType="member1">
			<id column="member_no" property="memberNo"/>
			<result column="member_name" property="memberName"/>
			<result column="email" property="email"/>
			<result column="member_pw" property="memberPw"/>
			<result column="comment_member_nick" property="memberNick"/>
			<result column="member_type" property="memberType"/>
			<result column="school_no" property="childSchool.schoolNo"/> <!-- 현재 입력받는 정보는 학교 고유 코드를 저장하게 됨...-->
			<result column="enroll_date" property="enrollDate"/>
		</association>
		<association property="post" resultMap="postMap"/>
	</resultMap>
	<resultMap id="postMap" type="post1">
		<id column="post_no" property="postNo"/>
		<result column="category_no" property="categoryNo"/>
		<result column="post_title" property="postTitle"/>
		<result column="post_content" property="postContent"/>
		<result column="view_count" property="viewCount"/>
		<result column="like_count" property="likeCount"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="status" property="status"/>
		<result column="is_public" property="isPublic"/>
		<result column="is_Notice" property="isNotice"/>
		<result column="comment_count" property="commentCount"/>
		<association property="member" javaType="member1">
			<id column="member_no" property="memberNo"/>
			<result column="member_name" property="memberName"/>
			<result column="email" property="email"/>
			<result column="member_pw" property="memberPw"/>
			<result column="post_member_nick" property="memberNick"/>
			<result column="member_type" property="memberType"/>
			<result column="school_no" property="childSchool.schoolNo"/> <!-- 현재 입력받는 정보는 학교 고유 코드를 저장하게 됨...-->
			<result column="enroll_date" property="enrollDate"/>
		</association>
		<association property="school" resultMap="school.schoolMap"/>
		<collection property="images" resultMap="image.imageMap"/>
		<collection property="comments" resultMap="postCommentMap"/>
	</resultMap>
	
	<select id="selectRegion" resultType="string">
		SELECT DISTINCT REGION FROM SCHOOL12
	</select>
	
	<select id="selectDistrict" parameterType="string" resultType="string">
		SELECT DISTINCT DISTRICT
		FROM SCHOOL12
		WHERE REGION LIKE
		CASE #{region}
			WHEN '서울' THEN '서울%'
			WHEN '경기' THEN '경기%'
			WHEN '인천' THEN '인천%'
			WHEN '부산' THEN '부산%'
			WHEN '세종' THEN '세종%'
			WHEN '광주' THEN '광주%'
			WHEN '대구' THEN '대구%'
			WHEN '대전' THEN '대전%'
			WHEN '울산' THEN '울산%'
			WHEN '강원' THEN '강원%'
			WHEN '충남' THEN '충청남도'
			WHEN '충북' THEN '충청북도'
			WHEN '경남' THEN '경상남도'
			WHEN '경북' THEN '경상북도'
			WHEN '전남' THEN '전라남도'
			WHEN '전북' THEN '전%북%'
			WHEN '제주' THEN '제주%'
		END
		ORDER BY DISTRICT
	</select>
	
	<select id="selectSchool" parameterType="string" resultType="string">
		SELECT DISTINCT SCHOOL_NAME
		FROM SCHOOL12
		WHERE DISTRICT = #{district}
		AND SCHOOL_NAME LIKE '%' || #{schoolName}
		ORDER BY SCHOOL_NAME
	</select>
	
	<select id="selectImageNo" parameterType="_int" resultMap="image.imageMap">
		SELECT * FROM IMAGE1 WHERE POST_NO=#{postNo}
	</select>
	
<!-- 	<insert id="insertPost" parameterType="post1">
		INSERT INTO POST1 (
			POST_NO,
			POST_TITLE,
			POST_CONTENT,
			CREATE_DATE,
			MEMBER_NO,
			CATEGORY_NO
		) VALUES (
			POST_SEQ.NEXTVAL, 
			#{postTitle}, 
			#{postContent},
			SYSDATE,
			#{m.memberNo},
			#{categoryNo}
		)
	</insert> -->

	<select id="selectBoardJoinCommentJoinMember" parameterType="_int" resultMap="postMap">
		SELECT 
		    P.*,
		    M1.MEMBER_NICK AS POST_MEMBER_NICK,
		    C.COMMENT_NO,
		    C.PARENT_NO,
		    C.COMMENT_CONTENT,
		    C.CREATE_DATE AS COMMENT_CREATE_DATE,
		    C.UPDATE_DATE AS COMMENT_UPDATE_DATE,
		    C.COMMENT_LEVEL,
		    C.MEMBER_NO AS COMMENT_MEMBER_NO,
		    C.POST_NO AS COMMENT_POST_NO,
		    M2.MEMBER_NICK AS COMMENT_MEMBER_NICK
		FROM 
		    POST1 P
		LEFT JOIN 
		    MEMBER1 M1 ON P.MEMBER_NO = M1.MEMBER_NO
		LEFT JOIN 
		    COMMENT1 C ON P.POST_NO = C.POST_NO
		LEFT JOIN 
		    MEMBER1 M2 ON C.MEMBER_NO = M2.MEMBER_NO
		WHERE 
		    P.POST_NO = #{postNo}
		ORDER BY 
		    P.POST_NO, C.COMMENT_NO
	</select>
	
	<insert id="insertPost" parameterType="post1">
		<selectKey keyProperty="postNo" resultType="int" order="BEFORE">
			SELECT POST_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO POST1 (
			POST_NO, <!-- /* 여기에 위에서 얻은 시퀀스 값이 들어감 */ -->
			POST_TITLE,
			POST_CONTENT,
			MEMBER_NO,
			CATEGORY_NO,
			CREATE_DATE,
			STATUS,
			IS_PUBLIC
		) VALUES (
			#{postNo}, <!-- /* selectKey에서 설정된 값 사용 */ -->
			#{postTitle},
			#{postContent},
			#{member.memberNo},
			#{categoryNo},
			SYSDATE,
			#{status},
			#{isPublic}
		)
	</insert>
	
	<insert id="insertPostImage" parameterType="image1">
		INSERT INTO IMAGE1 (
            IMG_NO,
            IMG_SEQ,
            ORINAME,
            RENAMED,
            POST_NO
        ) VALUES (
            SEQ_IMAGE_NO.NEXTVAL,
            #{imgSeq},
            #{oriname},
            #{renamed},
            #{postNo}
        )
	</insert>
	
	<update id="updatePostReadCount" parameterType="_int">
		UPDATE POST1 SET VIEW_COUNT=NVL(VIEW_COUNT,0)+1 WHERE POST_NO=#{postNo}
	</update>
	
	<select id="selectCategoryNo" parameterType="_int" resultType="int">
		SELECT CATEGORY_NO FROM POST1 WHERE POST_NO=#{postNo}
	</select>
</mapper>